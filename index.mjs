// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nonnegative-integer@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-iterator-like@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/symbol-iterator@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/error-tools-fmtprodmsg@esm/index.mjs";var o=e,d=t.isPrimitive,m=r,l=n,a=s,f=i,h=1e308;var p=function e(t,r,n,s){var i,p,u,j,v;if(!l(t))throw new TypeError(f("0CM4J",t));if(arguments.length>2){if(!d(n))throw new TypeError(f("0CM2y",n));if(u=n,arguments.length>3){if(!d(s))throw new TypeError(f("0CM3C",s));j=s}else j=h}else{if(arguments.length<2)throw new Error("insufficient arguments. Must provide both an iterator and a static value.");u=0,j=h}return o(i={},"next",g),o(i,"return",c),a&&m(t[a])&&o(i,a,b),v=-1,i;function g(){var e;return p?{done:!0}:(e=t.next(),v+=1,e.done?(p=!0,e):{value:v>=u&&v<j?r:e.value,done:!1})}function c(e){return p=!0,arguments.length?{value:e,done:!0}:{done:!0}}function b(){return e(t[a](),r,u,j)}},u=p;export{u as default};
//# sourceMappingURL=index.mjs.map
