// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@esm/index.mjs";import{isPrimitive as t}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nonnegative-integer@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-iterator-like@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/symbol-iterator@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/error-tools-fmtprodmsg@esm/index.mjs";var o=1e308;function d(l,m,a,f){var h,p,u,j,v;if(!n(l))throw new TypeError(i("0CM4J",l));if(arguments.length>2){if(!t(a))throw new TypeError(i("0CM2y",a));if(u=a,arguments.length>3){if(!t(f))throw new TypeError(i("0CM3C",f));j=f}else j=o}else{if(arguments.length<2)throw new Error("insufficient arguments. Must provide both an iterator and a static value.");u=0,j=o}return e(h={},"next",g),e(h,"return",c),s&&r(l[s])&&e(h,s,b),v=-1,h;function g(){var e;return p?{done:!0}:(e=l.next(),v+=1,e.done?(p=!0,e):{value:v>=u&&v<j?m:e.value,done:!1})}function c(e){return p=!0,arguments.length?{value:e,done:!0}:{done:!0}}function b(){return d(l[s](),m,u,j)}}export{d as default};
//# sourceMappingURL=index.mjs.map
